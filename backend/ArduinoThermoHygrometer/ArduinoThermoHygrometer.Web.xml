<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArduinoThermoHygrometer.Web</name>
    </assembly>
    <members>
        <member name="M:ArduinoThermoHygrometer.Web.Controllers.HealthcheckController.GetHealthCheckReport">
            <summary>
            Get Healthcheck status local development application.
            </summary>
            <returns>JSON representation of healthcheck status.</returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Extensions.ProgramExtensions.VerifyConfiguration(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)">
            <summary>
            Verifies the configuration value for the specified key.
            </summary>
            <param name="configuration">The IConfiguration instance.</param>
            <param name="key">The key of the configuration value.</param>
            <param name="value">The optional value of the configuration section.</param>
            <returns>The updated IConfiguration instance.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the configuration value does not exist.</exception>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Extensions.ProgramExtensions.RegisterDatabaseAndRunMigrationsOnStartup``1(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Registers the database and runs migrations on application startup.
            </summary>
            <typeparam name="T">The type of the DbContext.</typeparam>
            <param name="builder">The WebApplicationBuilder instance.</param>
            <returns>The updated WebApplicationBuilder instance.</returns>
            <exception cref="T:System.NotSupportedException">Thrown when the database provider is not SQL Server.</exception>"
            <exception cref="T:System.NotImplementedException">Thrown when unable to connect to the database.</exception>"
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Mappers.BatteryMapper.GetBatteryFromBatteryDto(ArduinoThermoHygrometer.Web.DTOs.BatteryDto)">
            <summary>
            Battery entity to dto mapper.
            </summary>
            <param name="batteryDto">Dto object.</param>
            <returns></returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Mappers.BatteryMapper.GetBatteryDtoFromBattery(ArduinoThermoHygrometer.Domain.Entities.Battery)">
            <summary>
            Battery dto to entity mapper.
            </summary>
            <param name="battery">Entity object.</param>
            <returns></returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Mappers.TemperatureMapper.GetTemperatureFromTemperatureDto(ArduinoThermoHygrometer.Web.DTOs.TemperatureDto)">
            <summary>
            Temperature entity to dto mapper.
            </summary>
            <param name="temperatureDto">Dto object.</param>
            <returns></returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Mappers.TemperatureMapper.GetTemperatureDtoFromTemperature(ArduinoThermoHygrometer.Domain.Entities.Temperature)">
            <summary>
            Temperature dto to entity mapper.
            </summary>
            <param name="temperature">Entity object.</param>
            <returns></returns>
        </member>
        <member name="M:ArduinoThermoHygrometer.Web.Middleware.SecurityHeadersMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the middleware for security headers.
            </summary>
            <param name="httpContext">The HTTP context.</param>
            <returns>A task that represents the asynchronous middleware operation.</returns>
        </member>
    </members>
</doc>
