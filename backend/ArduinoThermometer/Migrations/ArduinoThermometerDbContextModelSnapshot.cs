// <auto-generated />
using System;
using ArduinoThermometer.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArduinoThermometer.API.Migrations
{
    [DbContext(typeof(ArduinoThermometerDbContext))]
    partial class ArduinoThermometerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArduinoThermometer.API.Models.Temperature", b =>
                {
                    b.Property<int>("TemperatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemperatureId"));

                    b.Property<Guid>("TemperatureGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("TemperatureReadingDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("TemperatureReadingTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TemperatureValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemperatureId");

                    b.ToTable("Temperatures");
                });
#pragma warning restore 612, 618
        }
    }
}
